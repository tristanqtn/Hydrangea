name: CI / Release

on:
  push:
    branches: [ main ]
    tags:    [ 'v*' ]     # créer une release quand on push un tag vX.Y.Z
  pull_request:
    branches: [ main ]

permissions:
  contents: write          # nécessaire pour créer la release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build (${{ matrix.target.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: linux,   flake_attr: hydrangea-client-linux }
          - { name: windows, flake_attr: hydrangea-client-windows }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - id: build
        name: Nix build (${{ matrix.target.flake_attr }})
        shell: bash
        run: |
          set -euo pipefail
          OUT="$(nix build ".#${{ matrix.target.flake_attr }}" --print-out-paths)"
          echo "out=${OUT}" >> "$GITHUB_OUTPUT"

      - id: discover
        name: Locate produced binary
        shell: bash
        run: |
          set -euo pipefail
          OUT="${{ steps.build.outputs.out }}"
          BIN_PATH="$(find "${OUT}/bin" -maxdepth 1 -type f -perm -111 | head -n1)"
          BIN_NAME="$(basename "${BIN_PATH}")"
          echo "bin_path=${BIN_PATH}" >> "$GITHUB_OUTPUT"
          echo "bin_name=${BIN_NAME}" >> "$GITHUB_OUTPUT"

      - name: Upload artifact (${{ steps.discover.outputs.bin_name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.discover.outputs.bin_name }}
          path: ${{ steps.discover.outputs.bin_path }}

  release:
    name: Release
    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: artifacts/**/*
